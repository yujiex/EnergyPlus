name: Windows Releases

on:
  push:
    tags:
      - '*'

env:
  CMAKE_Fortran_COMPILER: "/c/msys64/mingw64/bin/x86_64-w64-mingw32-gfortran.exe"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  windows_release:
    runs-on: windows-2019
    continue-on-error: ${{ matrix.allow_failure }}
    strategy:
      # fail-fast: Default is true, switch to false to allow one platform to fail and still run others
      fail-fast: false
      matrix:
        arch: [x64, x86]
        include:
        - arch: x64
          allow_failure: false
          vs-generator: x64
          package-arch: x86_64
          asset_name: Win64
        - arch: x86
          allow_failure: false
          vs-generator: Win32
          package-arch: i386
          asset_name: Win32

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
        architecture: ${{ matrix.arch }}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install aqtinstall

    - name: Install Chocolately Packages
      shell: bash
      run: |
        set -x
        choco install --verbose -y miktex --version 20.10.0.20201030 --params '"/Mirror:https://ctan.math.illinois.edu/systems/win32/miktex/tm/packages/"'
        echo "C:/Program Files/MikTeX/miktex/bin/x64/" >> $GITHUB_PATH
        ls C:/Program Files/MikTeX/miktex/bin/x64 || true

    - name: Build Test Document (will install missing packages)
      working-directory: ./doc/test
      shell: bash
      run: |
        set -x
        mpm --admin --set-repository="https://ctan.math.illinois.edu/systems/win32/miktex/tm/packages/" && xelatex dependencies.tex
        # Avoid annoying warning: "xelatex: major issue: So far, you have not checked for updates as a MiKTeX user."
        mpm --find-updates
        # xelatex dependencies.tex || mpm --admin --set-repository=https://ctan.math.illinois.edu/systems/win32/miktex/tm/packages && xelatex dependencies.tex

    - name: Create Build Directory
      run: cmake -E make_directory ./build/

    - name: Install IFW
      shell: bash
      working-directory: ./build
      run: |
        aqt tool windows tools_ifw 3.2.2 qt.tools.ifw.32 --outputdir=./Qt
        echo "$(pwd)/Qt/Tools/QtInstallerFramework/3.2/bin" >> $GITHUB_PATH

    - name: Configure CMake
      working-directory: ./build
      shell: bash
      run: |
        which binarycreator
        echo $PATH
        cmake -G "Visual Studio 16 2019" -A ${{ matrix.vs-generator }} \
              -DLINK_WITH_PYTHON=ON -DBUILD_FORTRAN=ON -DBUILD_PACKAGE:BOOL=ON \
              -DDOCUMENTATION_BUILD="BuildWithAll" -DTEX_INTERACTION="batchmode" \
              -DQTIFWDIR="$(pwd)/Qt/Tools/QtInstallerFramework/3.2"
              ../

    - name: Build Package
      working-directory: ./build
      shell: bash
      run: cmake --build . --target package -j 2 --config Release

    - name: Upload Zip to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build/EnergyPlus-*-Windows-${{ matrix.package-arch }}.zip
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true

    - name: Upload IFW to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build/EnergyPlus-*-Windows-${{ matrix.package-arch }}.exe
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true
