project(AppGPostProcess Fortran)

cmake_minimum_required(VERSION 3.5.1)

cmake_policy(SET CMP0012 NEW) # if() recognizes boolean constants

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/../../Products")
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/../../Products")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/../../Products")

set(SRC AppGPostProcess.f90)

set(STATIC_EXE FALSE)

add_library(AppGPostProcessOptions INTERFACE)
if(APPLE)
  if(CMAKE_Fortran_COMPILER MATCHES "ifort")
    target_compile_options(AppGPostProcessOptions INTERFACE -fpp)
    target_compile_options(AppGPostProcessOptions INTERFACE -static-intel)
  else()
    if(NOT "Ninja" STREQUAL ${CMAKE_GENERATOR})
      target_compile_options(AppGPostProcessOptions INTERFACE -cpp)
    endif()
    target_compile_options(AppGPostProcessOptions INTERFACE -ffree-line-length-200)
  endif()
elseif(UNIX)
  set(CMAKE_SKIP_RPATH TRUE)
  if(CMAKE_Fortran_COMPILER MATCHES "ifort")
    target_compile_options(AppGPostProcessOptions INTERFACE -fpp)
    target_compile_options(AppGPostProcessOptions INTERFACE -static-intel)
  else()
    if(NOT "Ninja" STREQUAL ${CMAKE_GENERATOR})
      target_compile_options(AppGPostProcessOptions INTERFACE -cpp)
    endif()
    target_compile_options(AppGPostProcessOptions INTERFACE -static)
    target_compile_options(AppGPostProcessOptions INTERFACE -ffree-line-length-200)
    set(STATIC_EXE TRUE)
  endif()
else() # Windows
  set(STATIC_EXE TRUE)
  if(CMAKE_Fortran_COMPILER MATCHES "ifort")
    # Set release flags to be empty
    set(CMAKE_Fortran_FLAGS_RELEASE "")
    target_compile_options(AppGPostProcessOptions INTERFACE /libs:static)
    target_compile_options(AppGPostProcessOptions INTERFACE /fpp)
  else()
    target_compile_options(AppGPostProcessOptions INTERFACE -static)
    if(NOT "Ninja" STREQUAL ${CMAKE_GENERATOR})
      target_compile_options(AppGPostProcessOptions INTERFACE -cpp)
    endif()
    target_compile_options(AppGPostProcessOptions INTERFACE -ffree-line-length-200)
  endif()
endif()

set(SKIP_BUILD_RPATH TRUE)
add_executable(AppGPostProcess ${SRC})
target_link_libraries(AppGPostProcess PRIVATE AppGPostProcessOptions)
set_target_properties(AppGPostProcess PROPERTIES FOLDER Auxiliary)

install(TARGETS AppGPostProcess DESTINATION PostProcess)
if(NOT ${STATIC_EXE})
  include("${CMAKE_CURRENT_SOURCE_DIR}/../../cmake/ProjectMacros.cmake")
  install_target_prereqs(AppGPostProcess PostProcess)
endif()
